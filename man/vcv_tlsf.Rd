% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernelTLSF.R
\name{vcv_tlsf}
\alias{vcv_tlsf}
\title{VCV for TLSF}
\usage{
vcv_tlsf(support, Rinverse, rho, lambdarho, B0, B1, B2)
}
\arguments{
\item{support}{lower and upper bound of kernel window}

\item{Rinverse}{quantile function of TLSF \eqn{R}}

\item{rho}{density function \eqn{\rho}}

\item{lambdarho}{function \eqn{\lambda_\rho}}

\item{B0, B1, B2}{integrals expressed as functions of alpha}
}
\value{
\eqn{I(\theta)} information matrix
}
\description{
Most of the heavy-lifting in computing \eqn{\Sigma} is here.
This function also checks that \eqn{\alpha_1} is above its admissible minimum.
}
\details{
Current version of function assumes that the following terms go to
zero as \eqn{\alpha_2\rightarrow 1}:
\itemize{
\item \code{alpha2+A0(alpha2)*Rinverse(alpha2)}
\item \code{(1-alpha2)*CC2(alpha2,Cbar1)}
\item \code{(1-alpha2)*(Cbar1(alpha2) + Rinverse(alpha2)*CC2(alpha2,Cbar1))}
\item \code{(1-alpha2)*Rinverse(alpha2)*(2*Cbar1(alpha2) +
        Rinverse(alpha2)*CC2(alpha2,Cbar1))}
}
}
